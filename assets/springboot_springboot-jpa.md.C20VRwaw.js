import{_ as i,c as a,o as t,a4 as n}from"./chunks/framework.BaYfB92R.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"springboot/springboot-jpa.md","filePath":"springboot/springboot-jpa.md","lastUpdated":1755065510000}'),l={name:"springboot/springboot-jpa.md"};function p(e,s,r,h,k,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h3 id="springboot-jpa" tabindex="-1">SpringBoot JPA <a class="header-anchor" href="#springboot-jpa" aria-label="Permalink to &quot;SpringBoot JPA&quot;">​</a></h3><h4 id="springboot-설정" tabindex="-1">SpringBoot 설정 <a class="header-anchor" href="#springboot-설정" aria-label="Permalink to &quot;SpringBoot 설정&quot;">​</a></h4><ol><li>spring initalizr</li></ol><ul><li><p><a href="https://start.spring.io/" target="_blank" rel="noreferrer">https://start.spring.io/</a></p></li><li><p>설정 후 GENERATE 클릭</p></li></ul><ol start="2"><li><p>IntelliJ IDE애서 다운받은 폴더를 실행</p></li><li><p>Run &gt; Edit Configurations &gt; +버튼 &gt; Gradle &gt; Run에 bootRun 입력 후 OK</p></li><li><p>Run &gt; Run &#39;spring&#39; 실행 후 WebBrowser에서 localhost:8080/ 에 접속</p></li></ol><h4 id="spring-resttemplate-urlencoding" tabindex="-1">Spring restTemplate UrlEncoding <a class="header-anchor" href="#spring-resttemplate-urlencoding" aria-label="Permalink to &quot;Spring restTemplate UrlEncoding&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CommonUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relayURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiUrl, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initRequestParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(map));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ResponseEntity&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getForEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url, String.class);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// String Type으로 선언한 Url을 URI Object로 선언 시 별도의 인코딩 처리가 발생하지 않음 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CommonUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">relayURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiUrl, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initRequestParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(map));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ResponseEntity&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getForEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url), String.class);</span></span></code></pre></div>`,7)]))}const d=i(l,[["render",p]]);export{E as __pageData,d as default};
