import{_ as a,c as i,o as n,a4 as p}from"./chunks/framework.C2Gk6cJW.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dbms/oracle.md","filePath":"dbms/oracle.md","lastUpdated":1755149145000}'),l={name:"dbms/oracle.md"};function h(t,s,k,e,E,r){return n(),i("div",null,s[0]||(s[0]=[p(`<h4 id="oracle-18c-xe-접속방법" tabindex="-1">ORACLE 18C XE 접속방법 <a class="header-anchor" href="#oracle-18c-xe-접속방법" aria-label="Permalink to &quot;ORACLE 18C XE 접속방법&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(나의 경우 회사 네트워크에서 127.0.0.1이 아니라 정확한 ip를 입력해서 됨)</span></span>
<span class="line"><span>https://www.youtube.com/watch?v=jMzhxbiFXtM</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sqlplus / as sysdba</span></span>
<span class="line"><span>SELECT name, open_mode, cdb FROM v$database;</span></span>
<span class="line"><span>show pdbs;</span></span>
<span class="line"><span>exit</span></span>
<span class="line"><span></span></span>
<span class="line"><span>lsnrctl status (오라클의 ServiceName확인하기)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>services.msc oracle이 켜져있는지 확인하기</span></span>
<span class="line"><span></span></span>
<span class="line"><span>C:\\app\\f5074\\product\\18.0.0\\dbhomeXE\\network\\admin\\tnsnames.ora  SERVICE_NAME확인하기</span></span></code></pre></div><h4 id="오라클-sql파일-임포트-방법" tabindex="-1">오라클 sql파일 임포트 방법 <a class="header-anchor" href="#오라클-sql파일-임포트-방법" aria-label="Permalink to &quot;오라클 sql파일 임포트 방법&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://enspring.tistory.com/517</span></span>
<span class="line"><span>https://blog.naver.com/PostView.nhn?blogId=kimdj217&amp;logNo=221405032563&amp;parentCategoryNo=&amp;categoryNo=34&amp;viewDate=&amp;isShowPopularPosts=false&amp;from=postView</span></span>
<span class="line"><span>cmd 에서 sqlplus system</span></span>
<span class="line"><span>@C:\\Users\\f5074\\Documents\\ex.sql</span></span></code></pre></div><h4 id="_1분단위로-날짜-생성" tabindex="-1">1분단위로 날짜 생성 <a class="header-anchor" href="#_1분단위로-날짜-생성" aria-label="Permalink to &quot;1분단위로 날짜 생성&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT TO_CHAR(TO_DATE(START_DTTM, &#39;YYYYMMDDHH24MI&#39;) + (((LEVEL / 60)) / 24), &#39;YYYYMMDDHH24MI&#39;) TIME_STR</span></span>
<span class="line"><span>FROM (</span></span>
<span class="line"><span>	SELECT &#39;202012291300&#39; AS START_DTTM</span></span>
<span class="line"><span>		, &#39;202012301430&#39; AS END_DTTM</span></span>
<span class="line"><span>	FROM DUAL</span></span>
<span class="line"><span>	) connect BY TO_DATE(START_DTTM, &#39;YYYYMMDDHH24MI&#39;) + (((LEVEL / 60)) / 24) &lt;= TO_DATE(END_DTTM, &#39;YYYYMMDDHH24MI&#39;);</span></span></code></pre></div><h4 id="x일-단위로-날짜-생성" tabindex="-1">x일 단위로 날짜 생성 <a class="header-anchor" href="#x일-단위로-날짜-생성" aria-label="Permalink to &quot;x일 단위로 날짜 생성&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT TO_CHAR(DUM_DAYS, &#39;YYYYMMDD&#39;) DUM_DAYS</span></span>
<span class="line"><span>FROM (</span></span>
<span class="line"><span>    SELECT TO_DATE(&#39;20200101&#39;, &#39;YYYYMMDD&#39;) - 1 + ROWNUM AS DUM_DAYS</span></span>
<span class="line"><span>    FROM ALL_OBJECTS</span></span>
<span class="line"><span>    WHERE TO_DATE(&#39;20200101&#39;, &#39;YYYYMMDD&#39;) - 1 + ROWNUM &lt; TO_DATE(&#39;20200120&#39;, &#39;YYYYMMDD&#39;)</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span> WHERE TO_CHAR(DUM_DAYS, &#39;D&#39;) = &#39;7&#39;</span></span></code></pre></div><h4 id="x일-단위-활용" tabindex="-1">X일 단위 활용 <a class="header-anchor" href="#x일-단위-활용" aria-label="Permalink to &quot;X일 단위 활용&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>WITH TB_DATE AS (</span></span>
<span class="line"><span>	SELECT TO_CHAR(DUM_DAYS, &#39;YYYYMMDD&#39;) DUM_DAYS</span></span>
<span class="line"><span>	FROM (</span></span>
<span class="line"><span>	    SELECT TO_DATE(&#39;20200101&#39;, &#39;YYYYMMDD&#39;) - 1 + ROWNUM AS DUM_DAYS</span></span>
<span class="line"><span>	    FROM ALL_OBJECTS</span></span>
<span class="line"><span>	    WHERE TO_DATE(&#39;20200101&#39;, &#39;YYYYMMDD&#39;) - 1 + ROWNUM &lt;= TO_DATE(&#39;20200120&#39;, &#39;YYYYMMDD&#39;)</span></span>
<span class="line"><span>	    )</span></span>
<span class="line"><span>), TB_CODE AS(</span></span>
<span class="line"><span>		SELECT GENE_CD_DESC</span></span>
<span class="line"><span>		FROM T_CD_GENE_DATA</span></span>
<span class="line"><span>		WHERE 1 = 1</span></span>
<span class="line"><span>		  AND GENE_DV = &#39;STAT_EQP_SET&#39;</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>SELECT TD.DUM_DAYS, TC.GENE_CD_DESC</span></span>
<span class="line"><span>  FROM TB_DATE TD, TB_CODE TC</span></span>
<span class="line"><span>ORDER BY DUM_DAYS</span></span></code></pre></div><h4 id="설비데이터" tabindex="-1">설비데이터 <a class="header-anchor" href="#설비데이터" aria-label="Permalink to &quot;설비데이터&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>설비데이터를 차트로 만들때, 각 분단위로 데이터가 쌓이는 상황</span></span>
<span class="line"><span>상황에 따라 분단위 데이터가 중간에 빠질 때 빈값이 없도록 등록하는 방법</span></span>
<span class="line"><span>1. 클라이언트에서 없을 경우 이전데이터를 추가하는 형태로 구현</span></span>
<span class="line"><span>2. 쿼리를 사용해서 없는 데이터의 경우 만들어주는 방법</span></span>
<span class="line"><span>3. 설비에서 측정하는 항목별(ITEM_CD)로 날짜별로 데이터를 생성해야함</span></span>
<span class="line"><span>4. 데이터가 없는 빈값의 경우 이전 혹은 이후에 있는 데이터로 값을 덮어씌워야 함</span></span></code></pre></div><h4 id="dblink" tabindex="-1">DBLINK <a class="header-anchor" href="#dblink" aria-label="Permalink to &quot;DBLINK&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>JOIN 자체를 외부 DB에서 수행하려면, /*+ DRIVING_SITE(EXT_TABLE) */ 을 사용한다.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-&gt; 보통 외부 DB의 TABLE이 큰 경우, 작은 내부 DB DATA 를 그쪽으로 보낸후 JOIN 이후의 결과를 받는 방식</span></span>
<span class="line"><span></span></span>
<span class="line"><span>LEADING 등의 힌트가 안 먹을때는? 그냥 테이블, 뷰 순서 바꾸고 ORDERED 힌트 적용하면 먹힘</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-&gt; Query Transformation 등으로 인해 Query Block 이 바뀔수 있어 명시적으로 이름을 지정하는 LEADING 힌트가 안먹을 때가</span></span>
<span class="line"><span></span></span>
<span class="line"><span>있는 것 같다. 10053 Trace 확인하면 정확한 BLOCK 명이 나오려나?</span></span></code></pre></div><h4 id="dump파일-import" tabindex="-1">Dump파일 Import <a class="header-anchor" href="#dump파일-import" aria-label="Permalink to &quot;Dump파일 Import&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 먼저 emt.dmp파일을 C:\\DEV에 저장</span></span>
<span class="line"><span>2. cmd에서 순서대로 입력을 하면 됨</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1) C:\\Users\\hkedu&gt;sqlplus &quot;/as sysdba&quot;</span></span>
<span class="line"><span>2) SQL&gt; create user emt identified by emt default tablespace users;</span></span>
<span class="line"><span>3) SQL&gt; grant connect, resource to emt;</span></span>
<span class="line"><span>4) SQL&gt; create directory save as &#39;c:/dev&#39;;</span></span>
<span class="line"><span>5) SQL&gt; grant read, write on directory save to emt;</span></span>
<span class="line"><span>6) SQL&gt; exit</span></span>
<span class="line"><span>7) C:\\Users\\hkedu&gt;impdp emt/emt directory=save file=emt.dmp</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>오류가 생길 경우</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1) C:\\Users\\hkedu&gt;sqlplus &quot;/as sysdba&quot;</span></span>
<span class="line"><span>2) SQL&gt; drop user emt cascade;</span></span>
<span class="line"><span>3) SQL&gt; drop directory save;</span></span>
<span class="line"><span>4) SQL&gt; create user emt identified by emt default tablespace users;</span></span>
<span class="line"><span>5) SQL&gt; grant connect, resource to emt;</span></span>
<span class="line"><span>6) SQL&gt; create directory save as &#39;c:/dev&#39;;</span></span>
<span class="line"><span>7) SQL&gt; grant read, write on directory save to emt;</span></span>
<span class="line"><span>8) SQL&gt; exit</span></span>
<span class="line"><span>9) C:\\Users\\hkedu&gt;impdp emt/emt directory=save file=emt.dmp</span></span></code></pre></div><h4 id="order-by" tabindex="-1">ORDER BY <a class="header-anchor" href="#order-by" aria-label="Permalink to &quot;ORDER BY&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GROUP BY SITE, CUR_DT, EQP_DESC, EQP_NO, EQP_ID, STATUS, STATUS_D</span></span>
<span class="line"><span>ORDER BY SITE, CUR_DT, EQP_DESC ASC, EQP_NO, EQP_ID, STATUS, DECODE(STATUS_D, &#39;ChangePowder&#39;, 1, &#39;ChangeMold&#39;, 2, &#39;SampleProduction&#39;, 3)</span></span></code></pre></div><h4 id="일-주-월-년-단위-값-구하기" tabindex="-1">일,주,월,년 단위 값 구하기 <a class="header-anchor" href="#일-주-월-년-단위-값-구하기" aria-label="Permalink to &quot;일,주,월,년 단위 값 구하기&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>날짜별로 데이터를 수집 후 일, 주, 월, 년 단위로 GROUP BY로 처리할 수 있음</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT TO_CHAR(TO_TIMESTAMP(&#39;20200209 13595500&#39;, &#39;YYYYMMDD HH24MISSFF3&#39;), &#39;YYYY-MM-DD&#39;) AS YEAR_MONTH_DAYS</span></span>
<span class="line"><span>	, TO_CHAR(TO_TIMESTAMP(&#39;20200209 13595500&#39;, &#39;YYYYMMDD HH24MISSFF3&#39;), &#39;YYYY-WW&#39;) || &#39; W&#39; AS YEAR_WEEKS</span></span>
<span class="line"><span>	, TO_CHAR(TO_TIMESTAMP(&#39;20200209 13595500&#39;, &#39;YYYYMMDD HH24MISSFF3&#39;), &#39;YYYY-MM&#39;) AS YEAR_MONTHS</span></span>
<span class="line"><span>	, TO_CHAR(TO_TIMESTAMP(&#39;20200209 13595500&#39;, &#39;YYYYMMDD HH24MISSFF3&#39;), &#39;YYYY&#39;) AS YEARS</span></span>
<span class="line"><span>FROM DUAL</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT TO_CHAR(SYSDATE, &#39;YYYY-MM-DD&#39;)</span></span>
<span class="line"><span>	 , TO_CHAR(SYSDATE, &#39;YYYY-WW&#39;) || &#39; W&#39;</span></span>
<span class="line"><span>	 , TO_CHAR(SYSDATE, &#39;YYYY-MM&#39;)</span></span>
<span class="line"><span>	 , TO_CHAR(SYSDATE, &#39;YYYY&#39;)</span></span>
<span class="line"><span>  FROM DUAL</span></span></code></pre></div><h4 id="ora-01000최대-열기-커서-수를-초과했습니다" tabindex="-1">ORA-01000최대 열기 커서 수를 초과했습니다. <a class="header-anchor" href="#ora-01000최대-열기-커서-수를-초과했습니다" aria-label="Permalink to &quot;ORA-01000최대 열기 커서 수를 초과했습니다.&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; 위와같은 에러발생 시 사용하는 트랜잭션 테이블에 Lock가 걸릴 확률이 높음</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT SID</span></span>
<span class="line"><span>	, USER_NAME</span></span>
<span class="line"><span>	, COUNT(SID) CURSOR</span></span>
<span class="line"><span>FROM V$OPEN_CURSOR</span></span>
<span class="line"><span>WHERE 1 = 1</span></span>
<span class="line"><span>--  AND user_name = &#39;SCOTT&#39;</span></span>
<span class="line"><span>GROUP BY SID</span></span>
<span class="line"><span>	, USER_NAME</span></span>
<span class="line"><span>ORDER BY CURSOR DESC</span></span></code></pre></div><h4 id="procedures" tabindex="-1">Procedures <a class="header-anchor" href="#procedures" aria-label="Permalink to &quot;Procedures&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>##### 1. 테이블생성</span></span>
<span class="line"><span>CREATE TABLE TABLE3</span></span>
<span class="line"><span>(</span></span>
<span class="line"><span> COLUMN1 VARCHAR2(100)</span></span>
<span class="line"><span>,COLUMN2 VARCHAR2(100)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### 2. 프로시져 생성</span></span>
<span class="line"><span>CREATE OR REPLACE PROCEDURE EX_PROC</span></span>
<span class="line"><span>(</span></span>
<span class="line"><span>   PARA1 IN VARCHAR2</span></span>
<span class="line"><span>  ,PARA2 IN VARCHAR2</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>IS</span></span>
<span class="line"><span>	RETURN_MESSAGE VARCHAR2(100) := &#39;test&#39;;</span></span>
<span class="line"><span>	RETURN_MESSAGE2 VARCHAR2(100) := &#39;test&#39;;</span></span>
<span class="line"><span>BEGIN</span></span>
<span class="line"><span>	dbms_output.put_line(RETURN_MESSAGE);</span></span>
<span class="line"><span>	INSERT INTO TABLE3 (COLUMN1, COLUMN2) VALUES(PARA1, PARA2);</span></span>
<span class="line"><span>END EX_PROC;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>##### 3. 실행 (EXEC가 안될 경우 하단의 방식)</span></span>
<span class="line"><span>EXEC EX_PROC(&#39;test&#39;,&#39;test&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BEGIN</span></span>
<span class="line"><span> 	EX_PROC(&#39;test&#39;,&#39;test&#39;);</span></span>
<span class="line"><span>END;</span></span></code></pre></div><h4 id="oracle-sequence" tabindex="-1">Oracle sequence <a class="header-anchor" href="#oracle-sequence" aria-label="Permalink to &quot;Oracle sequence&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SEQUENCE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TEST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.SQ_ID INCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MINVALUE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAXVALUE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">999999999999999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CYCLE NOCACHE NOORDER;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 시퀀스 현재값 변경-1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SEQUENCE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ_X;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  SEQUENCE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SEQ_X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> START</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WITH</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> INCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAXVALUE  1E28 MINVALUE  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NOCYCLE CACHE  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NOORDER;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 시퀀스 현재값 변경-2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SEQUENCE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ_X INCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SEQ_X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NEXTVAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DUAL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SEQUENCE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ_X INCREMENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 7만 8만 건이 넘어 갈 경우 하단의 sequence 성능이 더 좋음</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1 (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  SEQ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, INST_DTM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	  (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TO_NUMBER(SEQ)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SYSDATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 연도 추가후 NEXTVAL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SYSDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LPAD((</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVL(TO_NUMBER( SUBSTR(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MAX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SEQ), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selectKey resultType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java.lang.String&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyProperty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SEQ&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BEFORE&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SQ_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NEXTVAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SEQ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DUAL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selectKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1 (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	SEQ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, INST_DTM</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	#{SEQ}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SYSDATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="날짜관련" tabindex="-1">날짜관련 <a class="header-anchor" href="#날짜관련" aria-label="Permalink to &quot;날짜관련&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;235959&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDDHH24MISS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99999</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00001</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99999</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00001</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DUAL</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 컬럼이 DATE인 데이터를 확인할 때는 235959까지 확인하도록 진행해야함</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> REGISTER_DATE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BETWEEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(o) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> REGISTER_DATE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BETWEEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;000000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDDHH24MISS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TO_DATE(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20220901&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;235959&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYYMMDDHH24MISS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="권한관련" tabindex="-1">권한관련 <a class="header-anchor" href="#권한관련" aria-label="Permalink to &quot;권한관련&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_TAB_PRIVS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GRANTEE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TEST&#39;</span></span></code></pre></div><h4 id="rownum-역순" tabindex="-1">ROWNUM 역순 <a class="header-anchor" href="#rownum-역순" aria-label="Permalink to &quot;ROWNUM 역순&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NUM</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ROW_NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PK_KEY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NUM</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEMP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NUM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><h4 id="oracle-function" tabindex="-1">oracle function <a class="header-anchor" href="#oracle-function" aria-label="Permalink to &quot;oracle function&quot;">​</a></h4><p>PLS-00306: &#39;TEST_OBJ&#39; 호출 시 인수의 갯수나 유형이 잘못되었습니다 function에서 object의 값을 추가할때 types에 선언된 object의 값을 같이 추가해줘야함</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE OR REPLACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TEST_OBJ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OBJECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TEST_A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TEST_B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="oracle-package" tabindex="-1">oracle package <a class="header-anchor" href="#oracle-package" aria-label="Permalink to &quot;oracle package&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> REPLACE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PACKAGE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PACKAGE_TEST</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	-- 패키지에 들어올 프로시저, 함수 정의</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST2(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, AGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	FUNCTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> examFunc(getGender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RETURN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PACKAGE_TEST;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 패키지 바디 부분</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> REPLACE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PACKAGE BODY </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TEST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PACKAGE_TEST</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 -- 패키지 내 프로시저, 함수 내용 정의</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 IS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 	 INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_TEST(COL1,COL2) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TEST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST2(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, AGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 IS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 	 INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_TEST(COL1,COL2) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, AGE);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROC_TEST2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 FUNCTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> examFunc </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 함수명</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	 (getGender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 함수 호출시 받아올 파라미터 정의</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 RETURN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 함수 수행 시 반환할 데이터 타입</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 IS</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 사용할 변수 정의</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	 	setGender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 BEGIN</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 변수를 가지고 함수 수행</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	     IF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getGender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;남&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> setGender :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;남자&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	     ELSIF getGender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;여&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> THEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> setGender :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;여자&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	     ELSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> setGender :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;오류&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	     END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 RETURN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> setGender; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 반환</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	 END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> examFunc;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PACKAGE_TEST;</span></span></code></pre></div><h4 id="oracle-procedure" tabindex="-1">oracle procedure <a class="header-anchor" href="#oracle-procedure" aria-label="Permalink to &quot;oracle procedure&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- IN 변수만 있는경우 실행</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXEC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEST_PROC();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXEC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEST_PROC(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">213</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DDOL&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- OUT 변수 있는경우 실행</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DECLARE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    param1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    param2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TEST_PROC(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param1, param2);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">studyingazae</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">59</span></span></code></pre></div><h4 id="테이블-컬럼찾기" tabindex="-1">테이블 컬럼찾기 <a class="header-anchor" href="#테이블-컬럼찾기" aria-label="Permalink to &quot;테이블 컬럼찾기&quot;">​</a></h4><p>/<em>테이블 내 컬럼 찾기</em>/ SELECT * FROM USER_TAB_COLUMNS WHERE COLUMN_NAME LIKE &#39;%ATT_FL_GRP_ID%&#39;;</p><h4 id="오라클" tabindex="-1">오라클 <a class="header-anchor" href="#오라클" aria-label="Permalink to &quot;오라클&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_OBJECTS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OWNER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;CCIP&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OBJECT_TYPE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TABLE&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OBJECT_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIKE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;%MBSH%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="oracle-charset-to-java" tabindex="-1">oracle charset to java <a class="header-anchor" href="#oracle-charset-to-java" aria-label="Permalink to &quot;oracle charset to java&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>SELECT LENGTHB(LTRIM(RTRIM(&#39;똠방각하햬썊&#39;))) AS A11</span></span>
<span class="line"><span>  FROM DUAL</span></span>
<span class="line"><span>;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT *</span></span>
<span class="line"><span>FROM NLS_DATABASE_PARAMETERS</span></span>
<span class="line"><span>WHERE PARAMETER = &#39;NLS_CHARACTERSET&#39;</span></span>
<span class="line"><span>;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.io.UnsupportedEncodingException;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public class TestCode {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static void main(String[] args) throws UnsupportedEncodingException{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        String charset;</span></span>
<span class="line"><span>        String test;</span></span>
<span class="line"><span>        int length;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        test = &quot;[ 30%할인! ]셀티아라 프리스틴 앰플 수분크림, 안티에이징, 보습 탄력, 줄기세포 배양액 화장품 (50ml X 1ea)&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;MS949&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset + &quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;UTF-8&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset + &quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;euc-kr&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset +&quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        test = &quot;똠방각하햬썊&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;MS949&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset + &quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;UTF-8&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset + &quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        charset = &quot;euc-kr&quot;;</span></span>
<span class="line"><span>        length = test.getBytes(charset).length;</span></span>
<span class="line"><span>        System.out.println(charset + &quot; length : &quot; + length + &quot; Bytes&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="oracle-merge문-관련" tabindex="-1">oracle merge문 관련 <a class="header-anchor" href="#oracle-merge문-관련" aria-label="Permalink to &quot;oracle merge문 관련&quot;">​</a></h3><p>데이터가 null인경우 성립하지 않음 이 경우 NVL 처리로 null이 아니도록 변경 t.DTL_ADDR = s.DTL_ADDR =&gt; and nvl(t.DTL_ADDR, &#39;1&#39;) = nvl(s.DTL_ADDR, &#39;1&#39;)</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MERGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1 T</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ALLN_ORD_MST_ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		  , ALLN_ORD_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEMP1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> INST_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> I_INTG_MEM_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ALLN_ORD_MST_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> I_ALLN_ORD_MST_ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) S</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ALLN_ORD_MST_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ALLN_ORD_MST_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DTL_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DTL_ADDR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> MATCHED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> THEN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MDF_DTM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SYSDATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MDF_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">INST_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FAIL_RSN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span></span></code></pre></div><h3 id="oracle" tabindex="-1">oracle <a class="header-anchor" href="#oracle" aria-label="Permalink to &quot;oracle&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">START</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UPR_GRP_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CONNECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UPR_GRP_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GRP_ID</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">START</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UPR_GRP_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CONNECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GRP_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UPR_GRP_ID</span></span></code></pre></div><h3 id="declare-begin-end" tabindex="-1">declare begin end <a class="header-anchor" href="#declare-begin-end" aria-label="Permalink to &quot;declare begin end&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1. declare begin end - PL/SQL 기본으로 쿼리, 문법을 실행할 수 있습니다</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 2. declare [선언부] - 변수, 상수를 선언할 수 있습니다</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 3. begin [실행부] - 제어, 반복문, 함수 등 다양한 로직 기술을 실행합니다</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 4. end [종료부] - 실행된 로직의 종료를 선언합니다</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 5. 실행한 결과는 DBMS_OUTPUT에서 확인할 수 있습니다</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DECLARE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TEST_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--초기 변수 선언</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    BEGIN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       TEST_NAME :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;테스트&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--변수에 값 대입 실시</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       DBMS_OUTPUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PUT_LINE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TEST_NAME : &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEST_NAME); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 결과 출력</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="oracle-tablespace" tabindex="-1">oracle tablespace <a class="header-anchor" href="#oracle-tablespace" aria-label="Permalink to &quot;oracle tablespace&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Error updating database.  Cause: java.sql.SQLException: ORA-01653: TEST.TB_TEST1 테이블을 128(으)로 TEST_DATA2 테이블스페이스에서 확장할 수 없습니다</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 테이블 스페이스 확인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_NAME,TABLESPACE_NAME</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_TABLES</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> OWNER=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TEST&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLE_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TB_TEST1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> -- 테이블 스페이스의 정보 확인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLESPACE_NAME, FILE_NAME, BYTES, AUTOEXTENSIBLE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_DATA_FILES</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TABLESPACE_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TEST_DATA2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 가용용량 확인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FILE_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;파일명&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TABLESPACE_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;테이블 스페이스명&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_CHAR((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;999,990,999&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;총 (KB)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_CHAR((((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;999,990,999&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;사용(KB)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TO_CHAR(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;999,990,999&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;가용(KB)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	, TRUNC(((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SUM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NVL(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;가용 %&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_FREE_SPACE FS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RIGHT JOIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DBA_DATA_FILES DF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FILE_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FILE_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- AND DF.TABLESPACE_NAME = &#39;TEST_DATA2&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TABLESPACE_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FILE_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BYTES</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TABLESPACE_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><p><a href="https://m.cafe.daum.net/oraclesqltuning/8ACn/28" target="_blank" rel="noreferrer">https://m.cafe.daum.net/oraclesqltuning/8ACn/28</a><a href="https://lawmin.tistory.com/58" target="_blank" rel="noreferrer">https://lawmin.tistory.com/58</a></p><p>ORA-01000최대 열기 커서 수를 초과했습니다. <a href="https://serendipity.tistory.com/65" target="_blank" rel="noreferrer">https://serendipity.tistory.com/65</a></p><p>oracle package: <a href="https://wakestand.tistory.com/173" target="_blank" rel="noreferrer">https://wakestand.tistory.com/173</a></p>`,58)]))}const c=a(l,[["render",h]]);export{g as __pageData,c as default};
