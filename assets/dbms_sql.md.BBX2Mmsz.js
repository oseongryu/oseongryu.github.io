import{_ as T,c as S,o as t,a4 as e}from"./chunks/framework.C2Gk6cJW.js";const N=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dbms/sql.md","filePath":"dbms/sql.md","lastUpdated":1755149145000}'),_={name:"dbms/sql.md"};function D(A,E,a,r,R,o){return t(),S("div",null,E[0]||(E[0]=[e('<h2 id="동시성제어-oracel-select-for-update-http-www-dator-co-kr-hotshin-textyle-236147" tabindex="-1">동시성제어 oracel select for update <a href="http://www.dator.co.kr/hotshin/textyle/236147" target="_blank" rel="noreferrer">http://www.dator.co.kr/hotshin/textyle/236147</a> <a class="header-anchor" href="#동시성제어-oracel-select-for-update-http-www-dator-co-kr-hotshin-textyle-236147" aria-label="Permalink to &quot;동시성제어 oracel select for update  http://www.dator.co.kr/hotshin/textyle/236147&quot;">​</a></h2><h2 id="where-조건이-여러개일-경우-https-ggmouse-tistory-com-252" tabindex="-1">WHERE 조건이 여러개일 경우 <a href="https://ggmouse.tistory.com/252" target="_blank" rel="noreferrer">https://ggmouse.tistory.com/252</a> <a class="header-anchor" href="#where-조건이-여러개일-경우-https-ggmouse-tistory-com-252" aria-label="Permalink to &quot;WHERE 조건이 여러개일 경우  https://ggmouse.tistory.com/252&quot;">​</a></h2><p>-- AND (ICG.VERAN NOT IN (SELECT GENE_CD FROM T_CD_GENE_DATA WHERE GENE_DV = &#39;DEFECT_EXCEPT01&#39;) AND ICG.GRUND = &#39;9P38&#39; ) -- AND (CASE WHEN ICG.VERAN IN (SELECT GENE_CD FROM T_CD_GENE_DATA WHERE GENE_DV = &#39;DEFECT_EXCEPT01&#39;) THEN ICG.GRUND ELSE &#39;&#39; END) = &#39;9P38&#39; -- AND (CASE WHEN ICG.VERAN IN (SELECT GENE_CD FROM T_CD_GENE_DATA WHERE GENE_DV = &#39;DEFECT_EXCEPT02&#39;) THEN ICG.LIFNR ELSE &#39;&#39; END) = (CASE WHEN ICG.VERAN IN (SELECT GENE_CD FROM T_CD_GENE_DATA WHERE GENE_DV = &#39;DEFECT_EXCEPT02&#39;) THEN ICG.LIFNR ELSE &#39;&#39; END) -- AND (ICG.VERAN NOT IN (SELECT GENE_CD FROM T_CD_GENE_DATA WHERE GENE_DV = &#39;DEFECT_EXCEPT02&#39;) AND ICG.LIFNR IS NULL )</p><p>1.과목이 Math일 경우에만 점수가 100점 그 외의 경우에는 0점인 ROW 조회</p><p>SELECT * FROM TBL_TEST WHERE Score = (CASE WHEN @in_Subject = &#39;Math&#39; THEN 100 ELSE 0 END)</p><p>위의 쿼리는 아래와 같이 AND OR 조건으로 바꿔 사용할 수도 있다. SELECT * FROM TBL_TEST WHERE (@in_Subject = &#39;Math&#39; AND Score = 100) OR (@in_Subject &lt;&gt; &#39;Math&#39; AND Score = 0)</p><p>2.과목이 Math일 경우에만 점수가 100점 그 외의 경우에는 전체 ROW 조회 SELECT * FROM TBL_TEST WHERE (CASE WHEN @in_Subject = &#39;Math&#39; THEN Score ELSE &#39;&#39; END) = (CASE WHEN @in_Subject = &#39;Math&#39; THEN 100 ELSE &#39;&#39; END)</p><p>3.과목이 Math일 경우 점수가 100점 English일 경우에 점수가 50점인 ROW 조회 SELECT * FROM TBL_TEST WHERE (CASE WHEN @in_Subject IN (&#39;Math&#39;,&#39;English&#39;) THEN Score ELSE &#39;&#39; END) = (CASE WHEN @in_Subject = &#39;Math&#39; THEN 100 WHEN @in_Subject = &#39;English&#39; THEN 50 ELSE &#39;&#39; END)</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2><p><a href="https://m.blog.naver.com/PostView.nhn?blogId=ohhyun93&amp;logNo=221076118831&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F" target="_blank" rel="noreferrer">https://m.blog.naver.com/PostView.nhn?blogId=ohhyun93&amp;logNo=221076118831&amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F</a></p><p>SELECT LISTAGG(REASON_DESC,&#39;,&#39;) WITHIN GROUP(ORDER BY REASON_DESC) AS REASON_DESC FROM ( SELECT TO_CHAR(TO_DATE(SUBSTR(REPLACE(X1.START_DATE_TIME, &#39; &#39;, &#39;&#39;), 1, 14), &#39;YYYY-MM-DD HH24:MI:SS&#39;),&#39;MM-DD HH24:MM&#39;) ||&#39;~&#39; || TO_CHAR(NVL(TO_DATE(SUBSTR(REPLACE(X1.END_DATE_TIME, &#39; &#39;, &#39;&#39;), 1, 14), &#39;YYYY-MM-DD HH24:MI:SS&#39;), SYSDATE),&#39;MM-DD HH24:MM&#39;) ||&#39;(&#39; ||X1.REASON_DESC || &#39;)&#39; REASON_DESC FROM EQP_HISTORY X1 WHERE X1.EQP_ID = &#39;100216&#39; AND X1.START_DATE_TIME &gt;= TO_CHAR(SYSTIMESTAMP-NUMTODSINTERVAL(30,&#39;DAY&#39;),&#39;YYYYMMDD&#39;) || &#39; 000000000&#39; AND X1.STATE = &#39;Down&#39; )</p><p>CASE WHEN SELECT MAX(X1.REASON_DESC) KEEP (DENSE_RANK LAST ORDER BY X1.START_DATE_TIME) AS REASON_DESC FROM EQP_HISTORY X1 WHERE X1.EQP_ID = &#39;100216&#39; AND X1.START_DATE_TIME &gt; EH.START_DATE_TIME (SELECT MAX(EH.REASON_DESC) KEEP (DENSE_RANK FIRST ORDER BY EH.START_DATE_TIME) FROM EQP_HISTORY EH WHERE 1 =1 AND EH.START_DATE_TIME &gt;= TO_CHAR(SYSTIMESTAMP-NUMTODSINTERVAL(2,&#39;DAY&#39;),&#39;YYYYMMDD&#39;) || &#39; 000000000&#39; AND EH.EQP_ID = T1.EQP_ID AND EH.START_DATE_TIME &gt;= TO_CHAR(TO_DATE(T1.START_TIME, &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYYMMDD HH24MISS&#39;)) IS NULL SELECT MAX(REASON_DESC) KEEP (DENSE_RANK LAST ORDER BY START_DATE_TIME) AS REASON_DESC FROM EQP_HISTORY WHERE EQP_ID = &#39;100216&#39;;</p><h2 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-label="Permalink to &quot;&quot;">​</a></h2><p>TO_CHAR(TO_DATE(SUBSTR(REPLACE(MAX(X1.START_DATE_TIME), &#39; &#39;, &#39;&#39;), 1, 14), &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYY-MM-DD HH24:MI:SS&#39;) SELECT TO_CHAR(TO_DATE(SUBSTR(REPLACE(MAX(X1.START_DATE_TIME) KEEP (DENSE_RANK FIRST ORDER BY X1.START_DATE_TIME DESC), &#39; &#39;, &#39;&#39;), 1, 14), &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYY-MM-DD HH24:MI:SS&#39;) AS REASON_DESC FROM EQP_HISTORY X1 WHERE X1.EQP_ID = &#39;100218&#39; SELECT * FROM EQP_HISTORY WHERE EQP_ID = &#39;100218&#39; AND START_DATE_TIME &gt;= TO_CHAR(SYSTIMESTAMP-NUMTODSINTERVAL(2,&#39;DAY&#39;),&#39;YYYYMMDD&#39;) || &#39; 000000000&#39;;</p><h2 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-label="Permalink to &quot;&quot;">​</a></h2><p>날짜 TO_CHAR(TO_DATE(T1.START_TIME, &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYYMMDD HH24MISS&#39;) AS START_TIME, (SELECT MAX(CYCLE_TIME_CUR) FROM EQP_CONT_HIST ECH WHERE ECH.EQP_ID = T1.EQP_ID AND ECH.PART_NUMBER = T1.PART_NUMBER) CYCLE_TIME_CUR ,(SELECT MIN(X1.START_DATE_TIME) FROM EQP_HISTORY X1 WHERE AND X1.START_DATE_TIME &gt;= TO_CHAR(SYSTIMESTAMP-NUMTODSINTERVAL(2,&#39;DAY&#39;),&#39;YYYYMMDD&#39;) || &#39; 000000000&#39; AND X1.EQP_ID = T1.EQP_ID AND TO_CHAR(TO_DATE(SUBSTR(REPLACE(X1.START_DATE_TIME, &#39; &#39;, &#39;&#39;), 1, 14), &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYYMMDDHH24MISS&#39;) &gt;= TO_CHAR(TO_DATE(T1.START_TIME, &#39;YYYY-MM-DD HH24:MI:SS&#39;), &#39;YYYYMMDDHH24MISS&#39;) ) REASON_DESC</p><p>#ansi sql</p><p>#SQL</p><h2 id="조회조건이-겹치는-부분은-제외하기-status-finish-와-status-watingforprocessing" tabindex="-1">조회조건이 겹치는 부분은 제외하기 STATUS &lt;&gt; &#39;Finish&#39;와 STATUS = &#39;WatingForProcessing&#39; <a class="header-anchor" href="#조회조건이-겹치는-부분은-제외하기-status-finish-와-status-watingforprocessing" aria-label="Permalink to &quot;조회조건이 겹치는 부분은 제외하기 STATUS &lt;&gt; &#39;Finish&#39;와 STATUS = &#39;WatingForProcessing&#39;&quot;">​</a></h2><h2 id="with에서-사용가능한-부분은-최대한-활용" tabindex="-1">WITH에서 사용가능한 부분은 최대한 활용 <a class="header-anchor" href="#with에서-사용가능한-부분은-최대한-활용" aria-label="Permalink to &quot;WITH에서 사용가능한 부분은 최대한 활용&quot;">​</a></h2><p>#SQL Developer에서 ##계획설명 (F10) SQL 쿼리 속도에 대해서 분석할 수 있음</p><p>#쿼리만들기 집합적사고방식</p><p><a href="http://poorsql.com/" target="_blank" rel="noreferrer">http://poorsql.com/</a></p><p><a href="http://www.dpriver.com/pp/sqlformat.htm" target="_blank" rel="noreferrer">http://www.dpriver.com/pp/sqlformat.htm</a></p>',24)]))}const H=T(_,[["render",D]]);export{N as __pageData,H as default};
