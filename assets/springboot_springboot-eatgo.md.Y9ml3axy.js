import{_ as e,c as t,o as r,a4 as o}from"./chunks/framework.C2Gk6cJW.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"springboot/springboot-eatgo.md","filePath":"springboot/springboot-eatgo.md","lastUpdated":1755068404000}'),i={name:"springboot/springboot-eatgo.md"};function l(n,a,h,p,s,d){return r(),t("div",null,a[0]||(a[0]=[o('<h2 id="_2021년-2월-2일" tabindex="-1">2021년 2월 2일 <a class="header-anchor" href="#_2021년-2월-2일" aria-label="Permalink to &quot;2021년 2월 2일&quot;">​</a></h2><p>SpringBoot 실전 프로젝트</p><h3 id="제1차시" tabindex="-1">제1차시 <a class="header-anchor" href="#제1차시" aria-label="Permalink to &quot;제1차시&quot;">​</a></h3><h4 id="_1-강의소개및-활용법" tabindex="-1">1. 강의소개및 활용법 <a class="header-anchor" href="#_1-강의소개및-활용법" aria-label="Permalink to &quot;1. 강의소개및 활용법&quot;">​</a></h4><p>&quot;뭔가 잘못했겠지&quot;</p><p>반성의 시간 가지기 &quot;무엇을 했나?&quot;, &quot;뭐가 어려웠나?&quot;, &quot;다음엔 어떻게 할것인가?&quot; (계획세우기) -&gt; 이를 통해서 성장할수 있을 것이고, 기록하기 (매일 기록하고 반성하는 습관을 가져야함)</p><p>급한일 VS 중요한일 -&gt; 사람은 기본적으로 급한 일 우선으로 처리하려고 한다. 급한일부터 처리하지말자 -&gt; 무엇이 중요한가? 확인 후 처리하기</p><h4 id="_2-무엇을-만들-것인가" tabindex="-1">2. 무엇을 만들 것인가? <a class="header-anchor" href="#_2-무엇을-만들-것인가" aria-label="Permalink to &quot;2. 무엇을 만들 것인가?&quot;">​</a></h4><ol><li>무엇이 문제인가? -&gt; 불편한점 -&gt; 분야를 선택 (ex) 버스를 타고 다니면 불편함 = Domain -&gt; 올바른문제 찾기 -&gt; 대박</li></ol><p>올바른 문제 찾기는 어렵다</p><ol start="2"><li><p>오늘 뭐 먹지? -&gt; Why? -&gt; 왜 고민하나? -&gt; 무엇이 문제인가? -&gt; 주변에 어떤 가게가 있는지 잘 모른다. 매일 같은 곳을 간다. 어떤 가게가 좋은지 잘 모르겠다. 기존에 방문한 사람들은 뭐라고 평가하는가? 예전에 봐둔가게가 있었는데 기억이 안난다. 가보고 싶은 곳을 기록하고 싶다. 가게에 자리가 있는지 모르겠다. 심리적으로 불편한 전화 대신 온라인으로 예약할 수 있을까?</p></li><li><p>사용자 입장에서 스토리를 구성 (사용자 스토리) = 기능명세서와 같지 않을까 사용자 입장에서 기능을 서술</p></li></ol><p>(사용자)는 (가치)를 위해 (기능)을 할 수 있다.</p><ol start="4"><li>사용자는 누구인가? = 유스케이스 다이어그램과 비슷하지 않을까</li></ol><p>고객 가게 관리자</p><p>고객은 뭘 먹고 싶은지 발견할 수 있도록 가게 목록을 볼 수 있다. -&gt; 뭘 먹고 싶은지 발견 이부분을 집중해서 어떻게 해야한다. 고객은 정확히 먹고 싶은 게 뭔지 확인하기 위해 가게의 메뉴를 볼 수 있다. 고객은 좋은 가게인지 알 수 있도록 평점을 확인할 수 있다. 고객은 선택의 폭을 좁히기 위해 가게 목록을 분류에 따라 볼 수 있다. 고객은 나와 남을 위해 가게에 평점과 리뷰를 남길 수 있다. -&gt;&#39;나와 남을 위해&#39; 고객은 나중에 찾아보기 쉽도록 가게를 즐겨찾기에 추가할 수 있다. 고객은 가게에서 기다리지 않기 위해 가게에 인원 메뉴를 에약할 수 있다.</p><p>가게는 관심있는 고객을 받기위해 예ㅑ약요청을 확인할수있다. 가게는 더나은 고객 서비스를 위해 예약요청에 응답할수있다.</p><p>관리자는 고객이 서비스를 쓸수있도록 가게정보를 등록할 수 있다.</p><p>인간의 욕심은 끝이 없고, 요구사항 변경은 반복된다. -&gt; 계획을 세우자. (요구사항의 변경은 좋은 신호)</p><ul><li>어떤사람이 어떤가치를 얻을 수 있는지를 항상 생각하는 습관을 가지자</li></ul><h3 id="_3-어떻게-만들-것인가" tabindex="-1">3. 어떻게 만들 것인가? <a class="header-anchor" href="#_3-어떻게-만들-것인가" aria-label="Permalink to &quot;3. 어떻게 만들 것인가?&quot;">​</a></h3><p>도메인 모델링 Restaurant Menu Item Food &amp; Beverages User 정보 (고객, 사장님, 관리자) Favorite Review Reservation</p><p>시스템 아키텍처 Sysytem Architecture</p><ul><li>제약조건</li></ul><ul><li>웹 Web</li><li>Mobile에서도 사용가능 (모바일 어플리케이션)</li></ul><p>다른부분이 존재, 공통인 부분 기능은 공통 -&gt; Front-end, Back-end</p><p>Multi-tier Architecture 여러개의 계층으로 나눠서 시스템을 구성</p><p>3-tier Architecture Presentataion, Business, Data Source -&gt; Front-end, Back-end, DB -&gt; HTML/CSS/JS , REST API, DBMS</p><p>Back-end에 집중</p><p>*Layerd Architecture -UI Layer -Application Layer -Domain Layer -Infrastructure Layer 프로그램의 복잡도를 낮추기 위해서</p><p>*기술 Java Spring Boot REST API</p><h4 id="_4-hello-world" tabindex="-1">4. Hello, World <a class="header-anchor" href="#_4-hello-world" aria-label="Permalink to &quot;4. Hello, World&quot;">​</a></h4><p>Spring Initializr Demo</p><p>Spring.io Quick start</p><p>Gradle Java 2.1.5</p><p>option</p><p>Group kr.co.fastcampus Artifact eatgo 설명 eatgo Desce Eat Go Project Jar , 8</p><p>Depencencies</p><p>Web -&gt; Spring Web Starter devtools -&gt; Spring Boot DevTools lombok -&gt; Lombok</p><p>Gererate the project</p><ol><li>압축풀기</li><li>프로젝트 실행</li><li>IntelliJ 설치</li></ol><p>Refactor Rename</p><p>README.md</p><p>interfaces WelcomeController</p><ul><li><p>devTools가 알아서 재시작함</p></li><li><p>test를 활용해야하는 이유</p></li></ul><h4 id="_5-test-driven-development" tabindex="-1">5. Test Driven Development <a class="header-anchor" href="#_5-test-driven-development" aria-label="Permalink to &quot;5. Test Driven Development&quot;">​</a></h4><ul><li>테스트 주도 개발 = 목표 주도 개발 = 사용자 중심 개발 = 인터페이스 중심 개발 (목표를 달성했는지 테스트)</li></ul><ul><li>TDD의 목표</li></ul><ol><li>올바르게 작동하는 깔끔한 코드를 만드는게 목표</li></ol><p>Refactoring Test Code 작성 Test First</p><p>TDD의 과정 Red (실패하는 코드) Green (Add 가능하도록) Refactoring (x + y 등을 구현해서 실행하도록)</p><p>실행하는게 오래걸릴때 TDD를 활용</p><ul><li>Demo</li></ul><p>Restaurant</p><p>Go TO &gt; Test</p><p>*Tip ctrl + shift 로 매서드 위치 변경</p><h4 id="_6-rest-api" tabindex="-1">6. REST API <a class="header-anchor" href="#_6-rest-api" aria-label="Permalink to &quot;6. REST API&quot;">​</a></h4><p>다양한 환경 지원</p><p>서로다른 Front-end 하나의 Back-end</p><p>Create Read Update Delete</p><p>POST GET PUT/PATCH DELETE</p><p>URI URL (Uniform Resource Locator)</p><ul><li>Collection 역할 Read(List), Create</li></ul><p>ex <a href="http://host/restaurants/" target="_blank" rel="noreferrer">http://host/restaurants/</a></p><ul><li>Member 역할 Read(Detail), Update, Delete</li></ul><p>ex <a href="http://host/restaurants/%7Bid%7D" target="_blank" rel="noreferrer">http://host/restaurants/{id}</a></p><ul><li><p>JSON</p></li><li id=""><p>APIs 가게목록 GET /restaurants GET /restaurants/1 GET /restaurants/</p></li></ul><p>가게추가 POST /restaurants</p><p id="">가게수정 PATCH /restaurants/</p><p id="">가게 삭제 DELETE /restaurants/</p><h4 id="_7-가게목록" tabindex="-1">7. 가게목록 <a class="header-anchor" href="#_7-가게목록" aria-label="Permalink to &quot;7. 가게목록&quot;">​</a></h4><p>실제 구현</p><h4 id="_8-가게상세-1" tabindex="-1">8. 가게상세 -1 <a class="header-anchor" href="#_8-가게상세-1" aria-label="Permalink to &quot;8. 가게상세 -1&quot;">​</a></h4><p>실제 구현</p><p>중복 Respository</p><h4 id="_9-가게상세-2" tabindex="-1">9. 가게상세 -2 <a class="header-anchor" href="#_9-가게상세-2" aria-label="Permalink to &quot;9. 가게상세 -2&quot;">​</a></h4><p>실제 구현</p><h4 id="_10-의존성-주입" tabindex="-1">10. 의존성 주입 <a class="header-anchor" href="#_10-의존성-주입" aria-label="Permalink to &quot;10. 의존성 주입&quot;">​</a></h4><p>Dependency Injection</p><p>의존성 주입</p><p>의존관계</p><p>A는 B에 의존 = A가 B를 사용 -&gt; B의 변화가 A에 영향 =&gt; 관리 필요</p><p>Controller는 Repository에 의존</p><p>Controller에 Repository를 사용</p><p>Spring IOC Container의 역할 @Component @Autowired</p><p>extract interface</p><h4 id="_11-레이어-분리-1" tabindex="-1">11. 레이어 분리-1 <a class="header-anchor" href="#_11-레이어-분리-1" aria-label="Permalink to &quot;11. 레이어 분리-1&quot;">​</a></h4><p>Layered Architechture</p><p>UI Layer Application Layer Domain Layer</p><p>interfaces application domain</p><p>Menu, Item을 추가</p><p>복잡한 로직 -&gt; Application Layer 도입 -&gt; Restaurant Service</p><p>실습</p><h4 id="_12-레이어-분리-2" tabindex="-1">12. 레이어 분리-2 <a class="header-anchor" href="#_12-레이어-분리-2" aria-label="Permalink to &quot;12. 레이어 분리-2&quot;">​</a></h4><p>실습</p><h4 id="_13-가짜객체" tabindex="-1">13. 가짜객체 <a class="header-anchor" href="#_13-가짜객체" aria-label="Permalink to &quot;13. 가짜객체&quot;">​</a></h4><p>Mock Object</p><p>Mockito</p><p>Spring Test</p><p>POJO (Plain Old Java Object)</p><h4 id="_14-가게-추가-1" tabindex="-1">14. 가게 추가-1 <a class="header-anchor" href="#_14-가게-추가-1" aria-label="Permalink to &quot;14. 가게 추가-1&quot;">​</a></h4><p>Header Location</p><p>Empty {} Httpie 설치</p><p>UI Layer = Controller Application Layer = Service</p><p>http GET localhost:8080 http POST localhost:8080/restaurants name=BeRyong address=Busan http GET localhost:8080/restaurants</p><p>Controller</p><h4 id="_15-가게-추가-2" tabindex="-1">15. 가게 추가-2 <a class="header-anchor" href="#_15-가게-추가-2" aria-label="Permalink to &quot;15. 가게 추가-2&quot;">​</a></h4><h3 id="_3차시-spring-boot-실전-프로젝트-03" tabindex="-1">3차시 Spring Boot 실전 프로젝트 03 <a class="header-anchor" href="#_3차시-spring-boot-실전-프로젝트-03" aria-label="Permalink to &quot;3차시 Spring Boot 실전 프로젝트 03&quot;">​</a></h3><h4 id="jpa" tabindex="-1">JPA <a class="header-anchor" href="#jpa" aria-label="Permalink to &quot;JPA&quot;">​</a></h4><h4 id="프론트엔드" tabindex="-1">프론트엔드 <a class="header-anchor" href="#프론트엔드" aria-label="Permalink to &quot;프론트엔드&quot;">​</a></h4><h4 id="가게-수정" tabindex="-1">가게 수정 <a class="header-anchor" href="#가게-수정" aria-label="Permalink to &quot;가게 수정&quot;">​</a></h4><h4 id="lombok-1" tabindex="-1">Lombok - 1 <a class="header-anchor" href="#lombok-1" aria-label="Permalink to &quot;Lombok - 1&quot;">​</a></h4><h4 id="lombok-2" tabindex="-1">Lombok - 2 <a class="header-anchor" href="#lombok-2" aria-label="Permalink to &quot;Lombok - 2&quot;">​</a></h4><h4 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h4><h4 id="에러-처리" tabindex="-1">에러 처리 <a class="header-anchor" href="#에러-처리" aria-label="Permalink to &quot;에러 처리&quot;">​</a></h4><h3 id="_4차시-spring-boot-실전-프로젝트-04" tabindex="-1">4차시 Spring Boot 실전 프로젝트 04 <a class="header-anchor" href="#_4차시-spring-boot-실전-프로젝트-04" aria-label="Permalink to &quot;4차시 Spring Boot 실전 프로젝트 04&quot;">​</a></h3><h4 id="메뉴-관리-1" tabindex="-1">메뉴 관리 -1 <a class="header-anchor" href="#메뉴-관리-1" aria-label="Permalink to &quot;메뉴 관리 -1&quot;">​</a></h4><h4 id="메뉴-관리-2" tabindex="-1">메뉴 관리 -2 <a class="header-anchor" href="#메뉴-관리-2" aria-label="Permalink to &quot;메뉴 관리 -2&quot;">​</a></h4><h4 id="메뉴-관리-3" tabindex="-1">메뉴 관리 -3 <a class="header-anchor" href="#메뉴-관리-3" aria-label="Permalink to &quot;메뉴 관리 -3&quot;">​</a></h4><h4 id="리뷰-작성-1" tabindex="-1">리뷰 작성 -1 <a class="header-anchor" href="#리뷰-작성-1" aria-label="Permalink to &quot;리뷰 작성 -1&quot;">​</a></h4><h4 id="리뷰-작성-2" tabindex="-1">리뷰 작성 -2 <a class="header-anchor" href="#리뷰-작성-2" aria-label="Permalink to &quot;리뷰 작성 -2&quot;">​</a></h4><h4 id="리뷰-작성-3" tabindex="-1">리뷰 작성 -3 <a class="header-anchor" href="#리뷰-작성-3" aria-label="Permalink to &quot;리뷰 작성 -3&quot;">​</a></h4><h3 id="_5차시-spring-boot-실전-프로젝트-05" tabindex="-1">5차시 Spring Boot 실전 프로젝트 05 <a class="header-anchor" href="#_5차시-spring-boot-실전-프로젝트-05" aria-label="Permalink to &quot;5차시 Spring Boot 실전 프로젝트 05&quot;">​</a></h3><h4 id="프로젝트-분리-1" tabindex="-1">프로젝트 분리 -1 <a class="header-anchor" href="#프로젝트-분리-1" aria-label="Permalink to &quot;프로젝트 분리 -1&quot;">​</a></h4><h4 id="프로젝트-분리-2" tabindex="-1">프로젝트 분리 -2 <a class="header-anchor" href="#프로젝트-분리-2" aria-label="Permalink to &quot;프로젝트 분리 -2&quot;">​</a></h4><h4 id="프로젝트-분리-3" tabindex="-1">프로젝트 분리 -3 <a class="header-anchor" href="#프로젝트-분리-3" aria-label="Permalink to &quot;프로젝트 분리 -3&quot;">​</a></h4><h4 id="프로젝트-분리-4" tabindex="-1">프로젝트 분리 -4 <a class="header-anchor" href="#프로젝트-분리-4" aria-label="Permalink to &quot;프로젝트 분리 -4&quot;">​</a></h4><h4 id="프로젝트-분리-5" tabindex="-1">프로젝트 분리 -5 <a class="header-anchor" href="#프로젝트-분리-5" aria-label="Permalink to &quot;프로젝트 분리 -5&quot;">​</a></h4><h4 id="진짜-영속화" tabindex="-1">진짜 영속화 <a class="header-anchor" href="#진짜-영속화" aria-label="Permalink to &quot;진짜 영속화&quot;">​</a></h4><h3 id="_6차시-spring-boot-실전-프로젝트-06" tabindex="-1">6차시 Spring Boot 실전 프로젝트 06 <a class="header-anchor" href="#_6차시-spring-boot-실전-프로젝트-06" aria-label="Permalink to &quot;6차시 Spring Boot 실전 프로젝트 06&quot;">​</a></h3><h4 id="가게-목록-필터링-1" tabindex="-1">가게 목록 필터링 -1 <a class="header-anchor" href="#가게-목록-필터링-1" aria-label="Permalink to &quot;가게 목록 필터링 -1&quot;">​</a></h4><h4 id="가게-목록-필터링-2" tabindex="-1">가게 목록 필터링 -2 <a class="header-anchor" href="#가게-목록-필터링-2" aria-label="Permalink to &quot;가게 목록 필터링 -2&quot;">​</a></h4><h4 id="가게-목록-필터링-3" tabindex="-1">가게 목록 필터링 -3 <a class="header-anchor" href="#가게-목록-필터링-3" aria-label="Permalink to &quot;가게 목록 필터링 -3&quot;">​</a></h4><h4 id="가게-목록-필터링-4" tabindex="-1">가게 목록 필터링 -4 <a class="header-anchor" href="#가게-목록-필터링-4" aria-label="Permalink to &quot;가게 목록 필터링 -4&quot;">​</a></h4><h4 id="가게-목록-필터링-5" tabindex="-1">가게 목록 필터링 -5 <a class="header-anchor" href="#가게-목록-필터링-5" aria-label="Permalink to &quot;가게 목록 필터링 -5&quot;">​</a></h4><h4 id="가게-목록-필터링-6" tabindex="-1">가게 목록 필터링 -6 <a class="header-anchor" href="#가게-목록-필터링-6" aria-label="Permalink to &quot;가게 목록 필터링 -6&quot;">​</a></h4><h3 id="_7차시-spring-boot-실전-프로젝트-07" tabindex="-1">7차시 Spring Boot 실전 프로젝트 07 <a class="header-anchor" href="#_7차시-spring-boot-실전-프로젝트-07" aria-label="Permalink to &quot;7차시 Spring Boot 실전 프로젝트 07&quot;">​</a></h3>',136)]))}const b=e(i,[["render",l]]);export{u as __pageData,b as default};
